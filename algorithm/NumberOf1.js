/**
 * @topic: 输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
 * @Date: 2019-06-21
 * @analysis: & 是按位操作。如果一个整数不为0，那它的二进制表示中，一定有一位为1。如果将这个整数减一，那最右边这个1后面的所有位都
 * 变成0。例如1100，最右边的1在右往左数第三位，减1后的值为1011。再将原值和减1后的值做&运算，如1100 & 1011，结果是1000。整体来看，
 * 减一再与原值做&运算，会将该整数最右边一个1变成0。一个整数二进制有多少个1，就可以进行多少次这样的操作。
 */

function NumberOf1(n)
{
    let count = 0;
    while(n != 0){
        count++;
        n = n & (n - 1);
    }
    return count;
}

let value1 = NumberOf1(5);
console.log(value1);
